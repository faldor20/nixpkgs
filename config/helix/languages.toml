[language-server.copilot]
command = "copilot"

[[grammar]]

name = "ocaml"
source = { git = "https://github.com/faldor20/tree-sitter-ocaml.git",rev="bf6f15268e5e7ccb489391f7899f3d7142bb8f51", subpath = "ocaml" }


[[language]]
name = "ocaml"
language-servers = ["ocamllsp", "copilot"]

[language-server.roc-ls]
command = "roc_language_server"

[[language]]
name = "roc"
scope = "source.roc"
injection-regex = "roc"
file-types = ["roc"]
shebangs = ["roc"]
auto-format=false
roots = []
comment-token = "#"
language-servers = ["roc-ls"]
indent = { tab-width = 4, unit = "    " }

[language.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
[[grammar]]

name = "roc"
source = { git = "https://github.com/faldor20/tree-sitter-roc.git", rev = "2c985e01fd1eae1e8ce0d52b084a6b555c26048e" }
[[grammar]]

name = "reasonMl"
source = { git = "https://github.com/danielo515/nvim-treesitter-reason.git", rev = "f4b91b8daeed0a0ed2604ea663401bf0e97769c0", subpath = "tree-sitter-reason/src" }

[[language]]
name = "reasonMl"
scope = "source.reasonMl"
injection-regex = "reasonMl"
file-types = ["re"]
shebangs = ["ocaml", "ocamlrun", "ocamlscript"]
roots = []
comment-token = "//"
language-servers = ["ocamllsp"]
indent = { tab-width = 2, unit = "  " }

[language.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'

[language-server]
biome = { command = "biome", args = ["lsp-proxy"] }

# ------ tailwindcss ----------

[[language]]
name = "html"
scope = "text.html.basic"
injection-regex = "html"
file-types = ["html", "htm", "shtml", "xhtml", "xht", "jsp", "asp", "aspx", "jshtm", "volt", "rhtml"]
roots = []
language-servers = [ "vscode-html-language-server","tailwindcss-ls","biome" ]
auto-format = true
indent = { tab-width = 2, unit = "  " }


[[language]]
name = "javascript"
language-servers = [ { name = "typescript-language-server", except-features = [ "format" ] }, "biome" ]
auto-format = true
formatter = { command = 'prettier', args = ["--parser", "typescript"] }

[[language]]
name = "typescript"
language-servers = [ { name = "typescript-language-server", except-features = [ "format" ] }, "biome" ]
auto-format = true

[[language]]
name = "tsx"
auto-format = true
language-servers = [ { name = "typescript-language-server", except-features = [ "format" ] }, "biome" ]

[[language]]
name = "jsx"
auto-format = true
language-servers = [ { name = "typescript-language-server", except-features = [ "format" ] }, "biome" ]

[[language]]
name = "json"
language-servers = [ { name = "vscode-json-language-server", except-features = [ "format" ] }, "biome" ]

[[language]]
name= "nix"
[language.formatter]
command = "nixfmt"

# [language-server.gpt]
# command = "bun"
# args = ["run","/home/eli/bin/helix-gpt","--handler", "copilot"]
# [[language]]
# name="go"
# language-servers=[
#   "gopls","gpt"
# ]

[language-server.phpactor]
command = "phpactor"
args = [ "language-server" ]

[[language]]
name = "php"
language-servers = [ "phpactor" ]

[language.formatter]
command = 'pretty-php.phar'
args = ["-F","format.php"]

[language-server.markdown-oxide]
command = "markdown-oxide"
args = [ ]

[[language]]
name = "markdown"
language-servers = [ "markdown-oxide" ]

[[language]]
name = "scheme"
formatter = { command = "schemat", args = ["/dev/stdin"] }
auto-format = true
language-servers = ["steel-language-server"]

[language-server.steel-language-server]
command = "steel-language-server"
